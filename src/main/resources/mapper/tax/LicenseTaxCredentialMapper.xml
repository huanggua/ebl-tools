<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangyin.ebl.dao.tax.LicenseTaxCredentialMapper">
	<resultMap id="BaseResultMap" type="com.wangyin.ebl.po.tax.LicenseTaxCredential">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="ent_id" jdbcType="VARCHAR" property="entId" />
		<result column="tax_no" jdbcType="VARCHAR" property="taxNo" />
		<result column="credential_path" jdbcType="VARCHAR" property="credentialPath" />
		<result column="credential_year" jdbcType="VARCHAR" property="credentialYear" />
		<result column="credential_month" jdbcType="VARCHAR" property="credentialMonth" />
		<result column="credential_id" jdbcType="VARCHAR" property="credentialId" />
		<result column="ext_credential_id" jdbcType="VARCHAR" property="extCredentialId" />
		<result column="upload_flag" jdbcType="TINYINT" property="uploadFlag" />
		<result column="db_status" jdbcType="TINYINT" property="dbStatus" />
		<result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
		<result column="created" jdbcType="VARCHAR" property="created" />
		<result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
		<result column="modified" jdbcType="VARCHAR" property="modified" />
		<result column="nano_credential_path" jdbcType="VARCHAR"
			property="nanoCredentialPath" />
	</resultMap>
	<sql id="Base_Column_List">
		id, ent_id, tax_no, credential_path, credential_year, credential_month,
		credential_id,
		ext_credential_id, upload_flag, db_status, created_date, created, modified_date,
		modified, nano_credential_path
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_tax_credential
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByEntId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_tax_credential
		where ent_id = #{ent_id,jdbcType=VARCHAR}
	</select>
	<select id="selectByTaxNo" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_tax_credential
		where tax_no = #{tax_no,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from license_tax_credential
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.wangyin.ebl.po.tax.LicenseTaxCredential">
		insert into license_tax_credential (id, ent_id, tax_no,
		credential_path, credential_year, credential_month,
		credential_id, ext_credential_id, upload_flag,
		db_status, created_date, created,
		modified_date, modified, nano_credential_path
		)
		values (#{id,jdbcType=INTEGER}, #{entId,jdbcType=VARCHAR},
		#{taxNo,jdbcType=VARCHAR},
		#{credentialPath,jdbcType=VARCHAR}, #{credentialYear,jdbcType=VARCHAR},
		#{credentialMonth,jdbcType=VARCHAR},
		#{credentialId,jdbcType=VARCHAR}, #{extCredentialId,jdbcType=VARCHAR}, #{uploadFlag,jdbcType=TINYINT},
		#{dbStatus,jdbcType=TINYINT}, #{createdDate,jdbcType=TIMESTAMP},
		#{created,jdbcType=VARCHAR},
		#{modifiedDate,jdbcType=TIMESTAMP}, #{modified,jdbcType=VARCHAR}, #{nanoCredentialPath,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.wangyin.ebl.po.tax.LicenseTaxCredential">
		insert into license_tax_credential
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="entId != null">
				ent_id,
			</if>
			<if test="taxNo != null">
				tax_no,
			</if>
			<if test="credentialPath != null">
				credential_path,
			</if>
			<if test="credentialYear != null">
				credential_year,
			</if>
			<if test="credentialMonth != null">
				credential_month,
			</if>
			<if test="credentialId != null">
				credential_id,
			</if>
			<if test="extCredentialId != null">
				ext_credential_id,
			</if>
			<if test="uploadFlag != null">
				upload_flag,
			</if>
			<if test="dbStatus != null">
				db_status,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modifiedDate != null">
				modified_date,
			</if>
			<if test="modified != null">
				modified,
			</if>
			<if test="nanoCredentialPath != null">
				nano_credential_path,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="entId != null">
				#{entId,jdbcType=VARCHAR},
			</if>
			<if test="taxNo != null">
				#{taxNo,jdbcType=VARCHAR},
			</if>
			<if test="credentialPath != null">
				#{credentialPath,jdbcType=VARCHAR},
			</if>
			<if test="credentialYear != null">
				#{credentialYear,jdbcType=VARCHAR},
			</if>
			<if test="credentialMonth != null">
				#{credentialMonth,jdbcType=VARCHAR},
			</if>
			<if test="credentialId != null">
				#{credentialId,jdbcType=VARCHAR},
			</if>
			<if test="extCredentialId != null">
				#{extCredentialId,jdbcType=VARCHAR},
			</if>
			<if test="uploadFlag != null">
				#{uploadFlag,jdbcType=TINYINT},
			</if>
			<if test="dbStatus != null">
				#{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				#{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				#{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=VARCHAR},
			</if>
			<if test="nanoCredentialPath != null">
				#{nanoCredentialPath,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wangyin.ebl.po.tax.LicenseTaxCredential">
		update license_tax_credential
		<set>
			<if test="entId != null">
				ent_id = #{entId,jdbcType=VARCHAR},
			</if>
			<if test="taxNo != null">
				tax_no = #{taxNo,jdbcType=VARCHAR},
			</if>
			<if test="credentialPath != null">
				credential_path = #{credentialPath,jdbcType=VARCHAR},
			</if>
			<if test="credentialYear != null">
				credential_year = #{credentialYear,jdbcType=VARCHAR},
			</if>
			<if test="credentialMonth != null">
				credential_month = #{credentialMonth,jdbcType=VARCHAR},
			</if>
			<if test="credentialId != null">
				credential_id = #{credentialId,jdbcType=VARCHAR},
			</if>
			<if test="extCredentialId != null">
				ext_credential_id = #{extCredentialId,jdbcType=VARCHAR},
			</if>
			<if test="uploadFlag != null">
				upload_flag = #{uploadFlag,jdbcType=TINYINT},
			</if>
			<if test="dbStatus != null">
				db_status = #{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=VARCHAR},
			</if>
			<if test="nanoCredentialPath != null">
				nano_credential_path = #{nanoCredentialPath,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wangyin.ebl.po.tax.LicenseTaxCredential">
		update license_tax_credential
		set ent_id = #{entId,jdbcType=VARCHAR},
		tax_no = #{taxNo,jdbcType=VARCHAR},
		credential_path = #{credentialPath,jdbcType=VARCHAR},
		credential_year = #{credentialYear,jdbcType=VARCHAR},
		credential_month = #{credentialMonth,jdbcType=VARCHAR},
		credential_id = #{credentialId,jdbcType=VARCHAR},
		ext_credential_id = #{extCredentialId,jdbcType=VARCHAR},
		upload_flag = #{uploadFlag,jdbcType=TINYINT},
		db_status = #{dbStatus,jdbcType=TINYINT},
		created_date = #{createdDate,jdbcType=TIMESTAMP},
		created = #{created,jdbcType=VARCHAR},
		modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
		modified = #{modified,jdbcType=VARCHAR},
		nano_credential_path = #{nanoCredentialPath,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>