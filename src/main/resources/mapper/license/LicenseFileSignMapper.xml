<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangyin.ebl.dao.license.LicenseFileSignMapper">
	<resultMap id="BaseResultMap" type="com.wangyin.ebl.po.license.LicenseFileSign">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="biz_id" jdbcType="VARCHAR" property="bizId" />
		<result column="file_path" jdbcType="VARCHAR" property="filePath" />
		<result column="file_hash_code" jdbcType="VARCHAR" property="fileHashCode" />
		<result column="file_type" jdbcType="VARCHAR" property="fileType" />
		<result column="sign_value" jdbcType="VARCHAR" property="signValue" />
		<result column="sign_algorithm" jdbcType="VARCHAR" property="signAlgorithm" />
		<result column="key_certificate" jdbcType="VARCHAR" property="keyCertificate" />
		<result column="db_status" jdbcType="TINYINT" property="dbStatus" />
		<result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
		<result column="created" jdbcType="VARCHAR" property="created" />
		<result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
		<result column="modified" jdbcType="VARCHAR" property="modified" />
		<association property="licenseOrderInfo"
			javaType="com.wangyin.ebl.po.order.LicenseOrderInfo">
			<id column="id" property="id" />
			<result column="user_id" property="userId" />
			<result column="order_no" property="orderNo" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, biz_id, file_path, file_hash_code, file_type, sign_value,
		sign_algorithm,
		key_certificate, db_status, created_date, created, modified_date, modified
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_file_sign
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByUserId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_file_sign
		where user_id = #{user_id,jdbcType=VARCHAR}
	</select>
	<select id="selectByBizId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_file_sign
		where biz_id = #{biz_id,jdbcType=VARCHAR}
	</select>
	<select id="selectByOrderNo" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		*
		from license_file_sign l, license_order_info r where
		l.user_id =
		r.user_id
		and r.order_no = #{order_no,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from license_file_sign
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.wangyin.ebl.po.license.LicenseFileSign">
		insert into license_file_sign (id, user_id, biz_id,
		file_path, file_hash_code, file_type,
		sign_value, sign_algorithm, key_certificate,
		db_status, created_date, created,
		modified_date, modified)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR},
		#{bizId,jdbcType=VARCHAR},
		#{filePath,jdbcType=VARCHAR}, #{fileHashCode,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR},
		#{signValue,jdbcType=VARCHAR}, #{signAlgorithm,jdbcType=VARCHAR},
		#{keyCertificate,jdbcType=VARCHAR},
		#{dbStatus,jdbcType=TINYINT}, #{createdDate,jdbcType=TIMESTAMP}, #{created,jdbcType=VARCHAR},
		#{modifiedDate,jdbcType=TIMESTAMP}, #{modified,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.wangyin.ebl.po.license.LicenseFileSign">
		insert into license_file_sign
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="bizId != null">
				biz_id,
			</if>
			<if test="filePath != null">
				file_path,
			</if>
			<if test="fileHashCode != null">
				file_hash_code,
			</if>
			<if test="fileType != null">
				file_type,
			</if>
			<if test="signValue != null">
				sign_value,
			</if>
			<if test="signAlgorithm != null">
				sign_algorithm,
			</if>
			<if test="keyCertificate != null">
				key_certificate,
			</if>
			<if test="dbStatus != null">
				db_status,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modifiedDate != null">
				modified_date,
			</if>
			<if test="modified != null">
				modified,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="bizId != null">
				#{bizId,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				#{filePath,jdbcType=VARCHAR},
			</if>
			<if test="fileHashCode != null">
				#{fileHashCode,jdbcType=VARCHAR},
			</if>
			<if test="fileType != null">
				#{fileType,jdbcType=VARCHAR},
			</if>
			<if test="signValue != null">
				#{signValue,jdbcType=VARCHAR},
			</if>
			<if test="signAlgorithm != null">
				#{signAlgorithm,jdbcType=VARCHAR},
			</if>
			<if test="keyCertificate != null">
				#{keyCertificate,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				#{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				#{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				#{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wangyin.ebl.po.license.LicenseFileSign">
		update license_file_sign
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="bizId != null">
				biz_id = #{bizId,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				file_path = #{filePath,jdbcType=VARCHAR},
			</if>
			<if test="fileHashCode != null">
				file_hash_code = #{fileHashCode,jdbcType=VARCHAR},
			</if>
			<if test="fileType != null">
				file_type = #{fileType,jdbcType=VARCHAR},
			</if>
			<if test="signValue != null">
				sign_value = #{signValue,jdbcType=VARCHAR},
			</if>
			<if test="signAlgorithm != null">
				sign_algorithm = #{signAlgorithm,jdbcType=VARCHAR},
			</if>
			<if test="keyCertificate != null">
				key_certificate = #{keyCertificate,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				db_status = #{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wangyin.ebl.po.license.LicenseFileSign">
		update license_file_sign
		set user_id = #{userId,jdbcType=VARCHAR},
		biz_id = #{bizId,jdbcType=VARCHAR},
		file_path = #{filePath,jdbcType=VARCHAR},
		file_hash_code = #{fileHashCode,jdbcType=VARCHAR},
		file_type = #{fileType,jdbcType=VARCHAR},
		sign_value = #{signValue,jdbcType=VARCHAR},
		sign_algorithm = #{signAlgorithm,jdbcType=VARCHAR},
		key_certificate = #{keyCertificate,jdbcType=VARCHAR},
		db_status = #{dbStatus,jdbcType=TINYINT},
		created_date = #{createdDate,jdbcType=TIMESTAMP},
		created = #{created,jdbcType=VARCHAR},
		modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
		modified = #{modified,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>