<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangyin.ebl.dao.enterprise.LicenseStoreMapper">
	<resultMap id="BaseResultMap" type="com.wangyin.ebl.po.enterprise.LicenseStore">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="ent_id" jdbcType="VARCHAR" property="entId" />
		<result column="store_type" jdbcType="VARCHAR" property="storeType" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="audit_state" jdbcType="TINYINT" property="auditState" />
		<result column="audit_fail_desc" jdbcType="VARCHAR" property="auditFailDesc" />
		<result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
		<result column="access_token" jdbcType="VARCHAR" property="accessToken" />
		<result column="store_ext" jdbcType="VARCHAR" property="storeExt" />
		<result column="db_status" jdbcType="TINYINT" property="dbStatus" />
		<result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
		<result column="created" jdbcType="VARCHAR" property="created" />
		<result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
		<result column="modified" jdbcType="VARCHAR" property="modified" />

		<association property="licenseEntLogin"
			javaType="com.wangyin.ebl.po.enterprise.LicenseEntLogin">
			<id column="id" property="id" />
			<result column="ent_id" property="entId" />
			<result column="ent_name" property="entName" />
		</association>
	    <association property="licenseServiceApply"
			javaType="com.wangyin.ebl.po.enterprise.LicenseServiceApply">
			<id column="id" property="id" />
			<result column="ent_id" property="entId" />
			<result column="tax_no" property="taxNo" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		id, ent_id, store_type, name, url, audit_state, audit_fail_desc,
		refresh_token, access_token,
		store_ext, db_status, created_date, created, modified_date, modified
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_store
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByEntId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_store
		where ent_id = #{ent_id,jdbcType=INTEGER}
	</select>
	<select id="selectByEntName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		*
		from license_store b, license_ent_login l where b.ent_id = l.ent_id
		and l.ent_name = #{ent_name,jdbcType=VARCHAR}
	</select>
	<select id="selectByTaxNo" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		*
		from license_store b, license_service_apply l where b.ent_id = l.ent_id
		and l.tax_no = #{tax_no,jdbcType=VARCHAR}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from license_store
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.wangyin.ebl.po.enterprise.LicenseStore">
		insert into license_store (id, ent_id, store_type,
		name, url, audit_state,
		audit_fail_desc, refresh_token, access_token,
		store_ext, db_status, created_date,
		created, modified_date, modified
		)
		values (#{id,jdbcType=INTEGER}, #{entId,jdbcType=VARCHAR},
		#{storeType,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{auditState,jdbcType=TINYINT},
		#{auditFailDesc,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR},
		#{accessToken,jdbcType=VARCHAR},
		#{storeExt,jdbcType=VARCHAR}, #{dbStatus,jdbcType=TINYINT}, #{createdDate,jdbcType=TIMESTAMP},
		#{created,jdbcType=VARCHAR}, #{modifiedDate,jdbcType=TIMESTAMP},
		#{modified,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.wangyin.ebl.po.enterprise.LicenseStore">
		insert into license_store
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="entId != null">
				ent_id,
			</if>
			<if test="storeType != null">
				store_type,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="auditState != null">
				audit_state,
			</if>
			<if test="auditFailDesc != null">
				audit_fail_desc,
			</if>
			<if test="refreshToken != null">
				refresh_token,
			</if>
			<if test="accessToken != null">
				access_token,
			</if>
			<if test="storeExt != null">
				store_ext,
			</if>
			<if test="dbStatus != null">
				db_status,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modifiedDate != null">
				modified_date,
			</if>
			<if test="modified != null">
				modified,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="entId != null">
				#{entId,jdbcType=VARCHAR},
			</if>
			<if test="storeType != null">
				#{storeType,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="auditState != null">
				#{auditState,jdbcType=TINYINT},
			</if>
			<if test="auditFailDesc != null">
				#{auditFailDesc,jdbcType=VARCHAR},
			</if>
			<if test="refreshToken != null">
				#{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="accessToken != null">
				#{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="storeExt != null">
				#{storeExt,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				#{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				#{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				#{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wangyin.ebl.po.enterprise.LicenseStore">
		update license_store
		<set>
			<if test="entId != null">
				ent_id = #{entId,jdbcType=VARCHAR},
			</if>
			<if test="storeType != null">
				store_type = #{storeType,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="auditState != null">
				audit_state = #{auditState,jdbcType=TINYINT},
			</if>
			<if test="auditFailDesc != null">
				audit_fail_desc = #{auditFailDesc,jdbcType=VARCHAR},
			</if>
			<if test="refreshToken != null">
				refresh_token = #{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="accessToken != null">
				access_token = #{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="storeExt != null">
				store_ext = #{storeExt,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				db_status = #{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wangyin.ebl.po.enterprise.LicenseStore">
		update license_store
		set ent_id = #{entId,jdbcType=VARCHAR},
		store_type = #{storeType,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		audit_state = #{auditState,jdbcType=TINYINT},
		audit_fail_desc = #{auditFailDesc,jdbcType=VARCHAR},
		refresh_token = #{refreshToken,jdbcType=VARCHAR},
		access_token = #{accessToken,jdbcType=VARCHAR},
		store_ext = #{storeExt,jdbcType=VARCHAR},
		db_status = #{dbStatus,jdbcType=TINYINT},
		created_date = #{createdDate,jdbcType=TIMESTAMP},
		created = #{created,jdbcType=VARCHAR},
		modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
		modified = #{modified,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>