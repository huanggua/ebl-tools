<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangyin.ebl.dao.user.LicenseUserSecurityMapper">
  <resultMap id="BaseResultMap" type="com.wangyin.ebl.po.user.LicenseUserSecurity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="security_question" jdbcType="VARCHAR" property="securityQuestion" />
    <result column="ca_flag" jdbcType="TINYINT" property="caFlag" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created" jdbcType="VARCHAR" property="created" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="modified" jdbcType="VARCHAR" property="modified" />
    
    <association property="licenseUserLogin" javaType="com.wangyin.ebl.po.user.LicenseUserLogin">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="user_id" property="userId"/>
     </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, password, salt, security_question, ca_flag, created_date, created, modified_date, 
    modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from license_user_security
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from license_user_security
    where user_id = #{id,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
   *
    from license_user_security b, license_user_login l where b.user_id = l.user_id
    and l.login_name = #{login_name,jdbcType=VARCHAR}
  </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from license_user_security
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wangyin.ebl.po.user.LicenseUserSecurity">
    insert into license_user_security (id, user_id, password, 
      salt, security_question, ca_flag, 
      created_date, created, modified_date, 
      modified)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{securityQuestion,jdbcType=VARCHAR}, #{caFlag,jdbcType=TINYINT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{created,jdbcType=VARCHAR}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wangyin.ebl.po.user.LicenseUserSecurity">
    insert into license_user_security
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="securityQuestion != null">
        security_question,
      </if>
      <if test="caFlag != null">
        ca_flag,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="modified != null">
        modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="securityQuestion != null">
        #{securityQuestion,jdbcType=VARCHAR},
      </if>
      <if test="caFlag != null">
        #{caFlag,jdbcType=TINYINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyin.ebl.po.user.LicenseUserSecurity">
    update license_user_security
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="securityQuestion != null">
        security_question = #{securityQuestion,jdbcType=VARCHAR},
      </if>
      <if test="caFlag != null">
        ca_flag = #{caFlag,jdbcType=TINYINT},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyin.ebl.po.user.LicenseUserSecurity">
    update license_user_security
    set user_id = #{userId,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      security_question = #{securityQuestion,jdbcType=VARCHAR},
      ca_flag = #{caFlag,jdbcType=TINYINT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=VARCHAR},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>