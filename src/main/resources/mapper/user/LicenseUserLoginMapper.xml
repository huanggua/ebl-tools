<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyin.ebl.dao.user.LicenseUserLoginMapper">
	<resultMap id="BaseResultMap" type="com.wangyin.ebl.po.user.LicenseUserLogin">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_status" property="userStatus" jdbcType="VARCHAR" />
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="login_type" property="loginType" jdbcType="VARCHAR" />
		<result column="login_status" property="loginStatus" jdbcType="VARCHAR" />
		<result column="db_status" property="dbStatus" jdbcType="TINYINT" />
		<result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
		<result column="created" property="created" jdbcType="VARCHAR" />
		<result column="modified_date" property="modifiedDate"
			jdbcType="TIMESTAMP" />
		<result column="modified" property="modified" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, user_status, login_name, login_type, login_status,
		db_status, created_date,
		created, modified_date, modified
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from license_user_login
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByUserId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_user_login
		where user_id = #{user_id,jdbcType=VARCHAR}
	</select>
	<select id="selectByLoginName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from license_user_login
		where login_name = #{login_name,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from license_user_login
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.wangyin.ebl.po.user.LicenseUserLogin">
		insert into license_user_login (id, user_id, user_status,
		login_name, login_type, login_status,
		db_status, created_date, created,
		modified_date, modified)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR},
		#{userStatus,jdbcType=VARCHAR},
		#{loginName,jdbcType=VARCHAR}, #{loginType,jdbcType=VARCHAR}, #{loginStatus,jdbcType=VARCHAR},
		#{dbStatus,jdbcType=TINYINT}, #{createdDate,jdbcType=TIMESTAMP},
		#{created,jdbcType=VARCHAR},
		#{modifiedDate,jdbcType=TIMESTAMP}, #{modified,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.wangyin.ebl.po.user.LicenseUserLogin">
		insert into license_user_login
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="loginName != null">
				login_name,
			</if>
			<if test="loginType != null">
				login_type,
			</if>
			<if test="loginStatus != null">
				login_status,
			</if>
			<if test="dbStatus != null">
				db_status,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="modifiedDate != null">
				modified_date,
			</if>
			<if test="modified != null">
				modified,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=VARCHAR},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginType != null">
				#{loginType,jdbcType=VARCHAR},
			</if>
			<if test="loginStatus != null">
				#{loginStatus,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				#{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				#{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				#{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				#{modified,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wangyin.ebl.po.user.LicenseUserLogin">
		update license_user_login
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=VARCHAR},
			</if>
			<if test="loginName != null">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginType != null">
				login_type = #{loginType,jdbcType=VARCHAR},
			</if>
			<if test="loginStatus != null">
				login_status = #{loginStatus,jdbcType=VARCHAR},
			</if>
			<if test="dbStatus != null">
				db_status = #{dbStatus,jdbcType=TINYINT},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=VARCHAR},
			</if>
			<if test="modifiedDate != null">
				modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wangyin.ebl.po.user.LicenseUserLogin">
		update license_user_login
		set user_id = #{userId,jdbcType=VARCHAR},
		user_status = #{userStatus,jdbcType=VARCHAR},
		login_name = #{loginName,jdbcType=VARCHAR},
		login_type = #{loginType,jdbcType=VARCHAR},
		login_status = #{loginStatus,jdbcType=VARCHAR},
		db_status = #{dbStatus,jdbcType=TINYINT},
		created_date = #{createdDate,jdbcType=TIMESTAMP},
		created = #{created,jdbcType=VARCHAR},
		modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
		modified = #{modified,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>